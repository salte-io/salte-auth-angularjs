{"version":3,"sources":["webpack://salte-auth-angularjs/webpack/universalModuleDefinition","webpack://salte-auth-angularjs/webpack/bootstrap","webpack://salte-auth-angularjs/./routes/salte-auth-routes.module.js","webpack://salte-auth-angularjs/./routes/salte-auth-routes.service.js","webpack://salte-auth-angularjs/./salte-auth.module.js","webpack://salte-auth-angularjs/./salte-auth.service.js","webpack://salte-auth-angularjs/external {\"root\":\"salte.auth\",\"commonjs\":\"salte-auth\",\"commonjs2\":\"salte-auth\",\"amd\":\"salte-auth\"}","webpack://salte-auth-angularjs/external \"angular\""],"names":["module","service","name","SalteAuthRoutesService","$injector","$location","routes","has","$state","get","states","i","length","state","secured","url","href","absolute","push","originalUrl","absUrl","$route","Object","keys","forEach","route","path","$inject","provider","run","SalteAuthService","window","addEventListener","$$onStorageChanged","$$registerRoutes","SalteAuthServiceProvider","config","$rootScope","$q","promise","then","response","$digest","catch","error","$auth","loginWithRedirect","digest","loginWithIframe","loginWithPopup","logoutWithRedirect","logoutWithIframe","logoutWithPopup","retrieveAccessToken","event","storageArea","key","indexOf","$config","concat","uirouter","ngroute","profile","salte","auth","prototype","$get"],"mappings":"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","file":"salte-auth-angularjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"salte-auth\"), require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"salte-auth-angularjs\", [\"salte-auth\", \"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salte-auth-angularjs\"] = factory(require(\"salte-auth\"), require(\"angular\"));\n\telse\n\t\troot[\"salte-auth-angularjs\"] = factory(root[\"salte.auth\"], root[\"angular\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__salte_io_salte_auth__, __WEBPACK_EXTERNAL_MODULE_angular__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import angular from 'angular';\n\nimport SalteAuthRoutesService from './salte-auth-routes.service.js';\n\nconst module = angular.module('salte.auth.routes', []);\n\nmodule.service('SalteAuthRoutesService', SalteAuthRoutesService);\n\nexport default module.name;\n","export default class SalteAuthRoutesService {\n  constructor($injector, $location) {\n    this.$injector = $injector;\n    this.$location = $location;\n  }\n\n  get uirouter() {\n    const routes = [];\n    if (this.$injector.has('$state')) {\n      const $state = this.$injector.get('$state');\n      const states = $state.get();\n\n      for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n\n        if (!state.secured) continue;\n\n        const url = $state.href(state.name, {}, {absolute: true});\n        routes.push(url);\n      }\n    }\n    return routes;\n  }\n\n  get ngroute() {\n    const originalUrl = this.$location.absUrl();\n    const routes = [];\n    if (this.$injector.has('$route')) {\n      const $route = this.$injector.get('$route');\n\n      Object.keys($route.routes).forEach((url) => {\n        const route = $route.routes[url];\n\n        if (!route.secured) return;\n\n        this.$location.path(url);\n\n        routes.push(this.$location.absUrl());\n      });\n    }\n    this.$location.absUrl(originalUrl);\n    return routes;\n  }\n}\n\nSalteAuthRoutesService.$inject = ['$injector', '$location'];\n","import angular from 'angular';\n\nimport RoutesModule from './routes/salte-auth-routes.module.js';\nimport SalteAuthService from './salte-auth.service.js';\n\nconst module = angular.module('salte.auth', [\n  RoutesModule\n]);\n\nmodule.provider('SalteAuthService', SalteAuthService);\n\nmodule.run(['SalteAuthService', (SalteAuthService) => {\n  window.addEventListener('storage', SalteAuthService.$$onStorageChanged);\n  SalteAuthService.$$registerRoutes();\n}]);\n\nexport default module.name;\n","import { SalteAuth } from '@salte-io/salte-auth';\n\nexport default class SalteAuthServiceProvider {\n  setup(config) {\n    return new SalteAuth(config);\n  }\n\n  $get($rootScope, $q, SalteAuthRoutesService) {\n    return class SalteAuthService {\n      static digest(promise) {\n        return promise.then((response) => {\n          $rootScope.$digest();\n          return response;\n        }).catch((error) => {\n          $rootScope.$digest();\n          throw error;\n        });\n      }\n\n      static loginWithRedirect(...args) {\n        return this.$auth.loginWithRedirect(...args);\n      }\n\n      static loginWithIframe(...args) {\n        return this.digest(this.$auth.loginWithIframe(...args));\n      }\n\n      static loginWithPopup(...args) {\n        return this.digest(this.$auth.loginWithPopup(...args));\n      }\n\n      static logoutWithRedirect(...args) {\n        return this.$auth.logoutWithRedirect(...args);\n      }\n\n      static logoutWithIframe(...args) {\n        return this.digest(this.$auth.logoutWithIframe(...args));\n      }\n\n      static logoutWithPopup(...args) {\n        return this.digest(this.$auth.logoutWithPopup(...args));\n      }\n\n      static retrieveAccessToken() {\n        return this.digest(this.$auth.retrieveAccessToken());\n      }\n\n      static get profile() {\n        return this.$auth.profile;\n      }\n\n      static get $auth() {\n        if (!window.salte || !window.salte.auth) {\n          return null;\n        }\n        return window.salte.auth;\n      }\n\n      static $$onStorageChanged(event) {\n        if (event.storageArea.length && event.key.indexOf('salte.auth') === -1) return;\n\n        $rootScope.$digest();\n      }\n\n      static $$registerRoutes() {\n        if ([false, true].indexOf(this.$auth.$config.routes) !== -1) return;\n        this.$auth.$config.routes = this.$auth.$config.routes || [];\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.uirouter);\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.ngroute);\n      }\n    };\n  }\n}\n\nSalteAuthServiceProvider.prototype.$get.$inject = ['$rootScope', '$q', 'SalteAuthRoutesService'];\n","module.exports = __WEBPACK_EXTERNAL_MODULE__salte_io_salte_auth__;","module.exports = __WEBPACK_EXTERNAL_MODULE_angular__;"],"sourceRoot":""}