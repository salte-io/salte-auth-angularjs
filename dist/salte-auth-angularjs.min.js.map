{"version":3,"sources":["webpack://salte-auth-angularjs/webpack/universalModuleDefinition","webpack://salte-auth-angularjs/external \"angular\"","webpack://salte-auth-angularjs/./routes/salte-auth-routes.module.js","webpack://salte-auth-angularjs/./routes/salte-auth-routes.service.js","webpack://salte-auth-angularjs/./salte-auth.service.js","webpack://salte-auth-angularjs/external {\"root\":\"salte.auth\",\"commonjs\":\"@salte-auth/salte-auth\",\"commonjs2\":\"@salte-auth/salte-auth\",\"amd\":\"@salte-auth/salte-auth\"}","webpack://salte-auth-angularjs/webpack/bootstrap","webpack://salte-auth-angularjs/webpack/runtime/compat get default export","webpack://salte-auth-angularjs/webpack/runtime/define property getters","webpack://salte-auth-angularjs/webpack/runtime/hasOwnProperty shorthand","webpack://salte-auth-angularjs/webpack/runtime/make namespace object","webpack://salte-auth-angularjs/./salte-auth.module.js"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__5__","angular","service","SalteAuthRoutesService","$injector","$location","this","routes","has","$state","get","states","i","length","state","secured","url","href","name","absolute","push","originalUrl","absUrl","$route","Object","keys","forEach","path","$inject","SalteAuthServiceProvider","config","SalteAuth","$rootScope","$q","promise","then","response","$digest","catch","error","eventType","callback","$listeners","index","indexOf","splice","$auth","loginWithRedirect","loginWithIframe","loginWithPopup","logoutWithRedirect","logoutWithIframe","logoutWithPopup","retrieveAccessToken","profile","window","salte","auth","$$listeners","event","storageArea","key","$config","concat","uirouter","ngroute","eventTypes","on","data","listeners","prototype","$get","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","obj","prop","hasOwnProperty","call","r","Symbol","toStringTag","value","RoutesModule","provider","SalteAuthService","run","addEventListener","$$onStorageChanged","$$registerRoutes","$$registerEvents"],"mappings":"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","file":"salte-auth-angularjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"@salte-auth/salte-auth\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"salte-auth-angularjs\", [\"angular\", \"@salte-auth/salte-auth\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salte-auth-angularjs\"] = factory(require(\"angular\"), require(\"@salte-auth/salte-auth\"));\n\telse\n\t\troot[\"salte-auth-angularjs\"] = factory(root[\"angular\"], root[\"salte.auth\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import angular from 'angular';\n\nimport SalteAuthRoutesService from './salte-auth-routes.service.js';\n\nconst module = angular.module('salte.auth.routes', []);\n\nmodule.service('SalteAuthRoutesService', SalteAuthRoutesService);\n\nexport default module.name;\n","export default class SalteAuthRoutesService {\n  constructor($injector, $location) {\n    this.$injector = $injector;\n    this.$location = $location;\n  }\n\n  get uirouter() {\n    const routes = [];\n    if (this.$injector.has('$state')) {\n      const $state = this.$injector.get('$state');\n      const states = $state.get();\n\n      for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n\n        if (!state.secured) continue;\n\n        const url = $state.href(state.name, {}, {absolute: true});\n        routes.push(url);\n      }\n    }\n    return routes;\n  }\n\n  get ngroute() {\n    const originalUrl = this.$location.absUrl();\n    const routes = [];\n    if (this.$injector.has('$route')) {\n      const $route = this.$injector.get('$route');\n\n      Object.keys($route.routes).forEach((url) => {\n        const route = $route.routes[url];\n\n        if (!route.secured) return;\n\n        this.$location.path(url);\n\n        routes.push(this.$location.absUrl());\n      });\n    }\n    this.$location.absUrl(originalUrl);\n    return routes;\n  }\n}\n\nSalteAuthRoutesService.$inject = ['$injector', '$location'];\n","import { SalteAuth } from '@salte-auth/salte-auth';\n\nexport default class SalteAuthServiceProvider {\n  setup(config) {\n    return new SalteAuth(config);\n  }\n\n  $get($rootScope, $q, SalteAuthRoutesService) {\n    return class SalteAuthService {\n      static digest(promise) {\n        return promise.then((response) => {\n          $rootScope.$digest();\n          return response;\n        }).catch((error) => {\n          $rootScope.$digest();\n          throw error;\n        });\n      }\n\n      static on(eventType, callback) {\n        if (!this.$listeners[eventType]) {\n          this.$listeners[eventType] = [];\n        }\n\n        this.$listeners[eventType].push(callback);\n      }\n\n      static off(eventType, callback) {\n        const index = this.$listeners[eventType].indexOf(callback);\n        this.$listeners[eventType].splice(index, 1);\n      }\n\n      static loginWithRedirect(...args) {\n        return this.$auth.loginWithRedirect(...args);\n      }\n\n      static loginWithIframe(...args) {\n        return this.$auth.loginWithIframe(...args);\n      }\n\n      static loginWithPopup(...args) {\n        return this.$auth.loginWithPopup(...args);\n      }\n\n      static logoutWithRedirect(...args) {\n        return this.$auth.logoutWithRedirect(...args);\n      }\n\n      static logoutWithIframe(...args) {\n        return this.$auth.logoutWithIframe(...args);\n      }\n\n      static logoutWithPopup(...args) {\n        return this.$auth.logoutWithPopup(...args);\n      }\n\n      static retrieveAccessToken() {\n        return this.$auth.retrieveAccessToken();\n      }\n\n      static get profile() {\n        return this.$auth.profile;\n      }\n\n      static get $auth() {\n        if (!window.salte || !window.salte.auth) {\n          return null;\n        }\n        return window.salte.auth;\n      }\n\n      static get $listeners() {\n        if (!this.$$listeners) {\n          this.$$listeners = {};\n        }\n        return this.$$listeners;\n      }\n\n      static $$onStorageChanged(event) {\n        if (event.storageArea.length && event.key.indexOf('salte.auth') === -1) return;\n\n        $rootScope.$digest();\n      }\n\n      static $$registerRoutes() {\n        if ([false, true].indexOf(this.$auth.$config.routes) !== -1) return;\n        this.$auth.$config.routes = this.$auth.$config.routes || [];\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.uirouter);\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.ngroute);\n      }\n\n      static $$registerEvents() {\n        const eventTypes = ['login', 'logout', 'refresh'];\n\n        for (let i = 0; i < eventTypes.length; i++) {\n          const eventType = eventTypes[i];\n          this.$auth.on(eventType, (error, data) => {\n            const listeners = this.$listeners[eventType];\n\n            if (listeners) {\n              for (let i = 0; i < listeners.length; i++) {\n                listeners[i](error, data);\n              }\n            }\n\n            $rootScope.$digest();\n          });\n        }\n      }\n    };\n  }\n}\n\nSalteAuthServiceProvider.prototype.$get.$inject = ['$rootScope', '$q', 'SalteAuthRoutesService'];\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import angular from 'angular';\n\nimport RoutesModule from './routes/salte-auth-routes.module.js';\nimport SalteAuthService from './salte-auth.service.js';\n\nconst module = angular.module('salte.auth', [\n  RoutesModule\n]);\n\nmodule.provider('SalteAuthService', SalteAuthService);\n\nmodule.run(['SalteAuthService', (SalteAuthService) => {\n  window.addEventListener('storage', SalteAuthService.$$onStorageChanged);\n  SalteAuthService.$$registerRoutes();\n  SalteAuthService.$$registerEvents();\n}]);\n\nexport default module.name;\n"],"sourceRoot":""}