{"version":3,"sources":["webpack://salte-auth-angularjs/webpack/universalModuleDefinition","webpack://salte-auth-angularjs/webpack/bootstrap","webpack://salte-auth-angularjs/external \"angular\"","webpack://salte-auth-angularjs/external {\"root\":\"salte.auth\",\"commonjs\":\"@salte-io/salte-auth\",\"commonjs2\":\"@salte-io/salte-auth\",\"amd\":\"@salte-io/salte-auth\"}","webpack://salte-auth-angularjs/./salte-auth.service.js","webpack://salte-auth-angularjs/./routes/salte-auth-routes.service.js","webpack://salte-auth-angularjs/./routes/salte-auth-routes.module.js","webpack://salte-auth-angularjs/./salte-auth.module.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_salteAuth","SalteAuthServiceProvider","config","SalteAuth","$rootScope","$q","SalteAuthRoutesService","SalteAuthService","_classCallCheck","this","_createClass","key","promise","then","response","$digest","catch","error","eventType","callback","$listeners","push","index","indexOf","splice","_$auth","$auth","loginWithRedirect","apply","arguments","_$auth2","loginWithIframe","_$auth3","loginWithPopup","_$auth4","logoutWithRedirect","_$auth5","logoutWithIframe","_$auth6","logoutWithPopup","retrieveAccessToken","event","storageArea","length","$config","routes","concat","uirouter","ngroute","_this","eventTypes","_loop","on","data","listeners","profile","salte","auth","$$listeners","$get","$inject","$injector","$location","has","$state","states","state","secured","url","href","absolute","originalUrl","absUrl","$route","keys","forEach","path","angular","service","RoutesModule","provider","run","addEventListener","$$onStorageChanged","$$registerRoutes","$$registerEvents"],"mappings":"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","file":"salte-auth-angularjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"@salte-io/salte-auth\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"salte-auth-angularjs\", [\"angular\", \"@salte-io/salte-auth\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"salte-auth-angularjs\"] = factory(require(\"angular\"), require(\"@salte-io/salte-auth\"));\n\telse\n\t\troot[\"salte-auth-angularjs\"] = factory(root[\"angular\"], root[\"salte.auth\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { SalteAuth } from '@salte-io/salte-auth';\n\nexport default class SalteAuthServiceProvider {\n  setup(config) {\n    return new SalteAuth(config);\n  }\n\n  $get($rootScope, $q, SalteAuthRoutesService) {\n    return class SalteAuthService {\n      static digest(promise) {\n        return promise.then((response) => {\n          $rootScope.$digest();\n          return response;\n        }).catch((error) => {\n          $rootScope.$digest();\n          throw error;\n        });\n      }\n\n      static on(eventType, callback) {\n        if (!this.$listeners[eventType]) {\n          this.$listeners[eventType] = [];\n        }\n\n        this.$listeners[eventType].push(callback);\n      }\n\n      static off(eventType, callback) {\n        const index = this.$listeners[eventType].indexOf(callback);\n        this.$listeners[eventType].splice(index, 1);\n      }\n\n      static loginWithRedirect(...args) {\n        return this.$auth.loginWithRedirect(...args);\n      }\n\n      static loginWithIframe(...args) {\n        return this.$auth.loginWithIframe(...args);\n      }\n\n      static loginWithPopup(...args) {\n        return this.$auth.loginWithPopup(...args);\n      }\n\n      static logoutWithRedirect(...args) {\n        return this.$auth.logoutWithRedirect(...args);\n      }\n\n      static logoutWithIframe(...args) {\n        return this.$auth.logoutWithIframe(...args);\n      }\n\n      static logoutWithPopup(...args) {\n        return this.$auth.logoutWithPopup(...args);\n      }\n\n      static retrieveAccessToken() {\n        return this.$auth.retrieveAccessToken();\n      }\n\n      static get profile() {\n        return this.$auth.profile;\n      }\n\n      static get $auth() {\n        if (!window.salte || !window.salte.auth) {\n          return null;\n        }\n        return window.salte.auth;\n      }\n\n      static get $listeners() {\n        if (!this.$$listeners) {\n          this.$$listeners = {};\n        }\n        return this.$$listeners;\n      }\n\n      static $$onStorageChanged(event) {\n        if (event.storageArea.length && event.key.indexOf('salte.auth') === -1) return;\n\n        $rootScope.$digest();\n      }\n\n      static $$registerRoutes() {\n        if ([false, true].indexOf(this.$auth.$config.routes) !== -1) return;\n        this.$auth.$config.routes = this.$auth.$config.routes || [];\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.uirouter);\n        this.$auth.$config.routes = this.$auth.$config.routes.concat(SalteAuthRoutesService.ngroute);\n      }\n\n      static $$registerEvents() {\n        const eventTypes = ['login', 'logout', 'refresh'];\n\n        for (let i = 0; i < eventTypes.length; i++) {\n          const eventType = eventTypes[i];\n          this.$auth.on(eventType, (error, data) => {\n            const listeners = this.$listeners[eventType];\n\n            if (listeners) {\n              for (let i = 0; i < listeners.length; i++) {\n                listeners[i](error, data);\n              }\n            }\n\n            $rootScope.$digest();\n          });\n        }\n      }\n    };\n  }\n}\n\nSalteAuthServiceProvider.prototype.$get.$inject = ['$rootScope', '$q', 'SalteAuthRoutesService'];\n","export default class SalteAuthRoutesService {\n  constructor($injector, $location) {\n    this.$injector = $injector;\n    this.$location = $location;\n  }\n\n  get uirouter() {\n    const routes = [];\n    if (this.$injector.has('$state')) {\n      const $state = this.$injector.get('$state');\n      const states = $state.get();\n\n      for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n\n        if (!state.secured) continue;\n\n        const url = $state.href(state.name, {}, {absolute: true});\n        routes.push(url);\n      }\n    }\n    return routes;\n  }\n\n  get ngroute() {\n    const originalUrl = this.$location.absUrl();\n    const routes = [];\n    if (this.$injector.has('$route')) {\n      const $route = this.$injector.get('$route');\n\n      Object.keys($route.routes).forEach((url) => {\n        const route = $route.routes[url];\n\n        if (!route.secured) return;\n\n        this.$location.path(url);\n\n        routes.push(this.$location.absUrl());\n      });\n    }\n    this.$location.absUrl(originalUrl);\n    return routes;\n  }\n}\n\nSalteAuthRoutesService.$inject = ['$injector', '$location'];\n","import angular from 'angular';\n\nimport SalteAuthRoutesService from './salte-auth-routes.service.js';\n\nconst module = angular.module('salte.auth.routes', []);\n\nmodule.service('SalteAuthRoutesService', SalteAuthRoutesService);\n\nexport default module.name;\n","import angular from 'angular';\n\nimport RoutesModule from './routes/salte-auth-routes.module.js';\nimport SalteAuthService from './salte-auth.service.js';\n\nconst module = angular.module('salte.auth', [\n  RoutesModule\n]);\n\nmodule.provider('SalteAuthService', SalteAuthService);\n\nmodule.run(['SalteAuthService', (SalteAuthService) => {\n  window.addEventListener('storage', SalteAuthService.$$onStorageChanged);\n  SalteAuthService.$$registerRoutes();\n  SalteAuthService.$$registerEvents();\n}]);\n\nexport default module.name;\n"],"sourceRoot":""}